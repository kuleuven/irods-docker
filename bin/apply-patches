#!/bin/bash

# Drop MyISAM as engine
sed -i "s/ engine = MyISAM;$/;/" /var/lib/irods/packaging/sql/icatSysTables.sql

# Add where clause to delete statement in R_ObjectId_nextval to fix concurrent queries
cat > /var/lib/irods/packaging/sql/mysql_functions.sql <<'EOF'
drop function if exists R_ObjectId_nextval;
delimiter %%
create function R_ObjectId_nextval()
returns bigint
begin
   insert into R_ObjectId_seq_tbl values (NULL) ;
   set @R_ObjectId_val=LAST_INSERT_ID() ;
   delete from R_ObjectId_seq_tbl where nextval = @R_ObjectId_val;
   return @R_ObjectId_val ;
end
%%
delimiter ;

drop function if exists R_ObjectId_currval;
create function R_ObjectId_currval() returns bigint deterministic return @R_ObjectId_val;
EOF

# Let irods cope with ipv6 database servers
curl https://raw.githubusercontent.com/pypyodbc/pypyodbc/main/pypyodbc.py > /var/lib/irods/scripts/irods/pypyodbc.py

# Set Charset=UTF8 in /var/lib/irods/.odbc.ini
sed -i "s/'Option': '2',/'Option': '2', 'Charset': 'UTF8',/" /var/lib/irods/scripts/irods/database_connect.py
sed -i "s/'FOUND_ROWS': '1',/'FOUND_ROWS': '1', 'Charset': 'UTF8',/" /var/lib/irods/scripts/irods/database_connect.py
sed -i "s/'\[client\]'/'[client]', 'ssl=true'/" /var/lib/irods/scripts/irods/database_connect.py

# Don't refuse SSL
sed -i "s/CS_NEG_REFUSE/CS_NEG_DONT_CARE/g" /var/lib/irods/scripts/irods/lib.py /var/lib/irods/scripts/setup_irods.py /var/lib/irods/scripts/irods/test/test_rulebase.py

# 20211126 Require ssl to connect in database_connect.py
sed -i "s/    odbc_dict\['sslmode'\]/odbc_dict['sslmode']/" /var/lib/irods/scripts/irods/database_connect.py
sed -i "s/    odbc_dict\['ssl'\]/odbc_dict['ssl']/" /var/lib/irods/scripts/irods/database_connect.py

# 20211126 Remove the iput test - irodsController is blocking with syslog enabled
sed -i '/Starting iRODS/,/configured and ready/d' /var/lib/irods/scripts/setup_irods.py
sed -i '/setup_catalog/a \ \ \ \ \ \ \ \ database_interface.server_launch_hook(irods_config)' /var/lib/irods/scripts/setup_irods.py
